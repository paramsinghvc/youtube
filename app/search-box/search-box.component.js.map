{"version":3,"file":"search-box.component.js","sourceRoot":"","sources":["../../src/app/search-box/search-box.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAAoE,eAAe,CAAC,CAAA;AACpF,qCAAmC,gCAAgC,CAAC,CAAA;AAEpE,mBAA0B,SAAS,CAAC,CAAA;AASpC;IAKC,4BAAoB,EAAe,EAAqC,OAA4B;QAAhF,OAAE,GAAF,EAAE,CAAa;QAAqC,YAAO,GAAP,OAAO,CAAqB;QAHpG,YAAO,GAA0B,IAAI,mBAAY,EAAW,CAAC;QAC7D,YAAO,GAAiC,IAAI,mBAAY,EAAkB,CAAC;IAE4B,CAAC;IAExG,qCAAQ,GAAR;QAAA,iBAiBC;QAhBA,eAAU,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,CAAC;aACjD,GAAG,CAAC,UAAC,CAAO,IAAK,OAAA,CAAC,CAAC,MAAM,CAAC,KAAK,EAAd,CAAc,CAAC;aAChC,MAAM,CAAC,UAAC,CAAU,IAAK,OAAA,CAAC,CAAC,MAAM,GAAG,CAAC,EAAZ,CAAY,CAAC;aACpC,YAAY,CAAC,GAAG,CAAC;aACjB,EAAE,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAvB,CAAuB,CAAC;aACjC,GAAG,CAAC,UAAC,CAAU,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAtB,CAAsB,CAAC;aAC3C,MAAM,EAAE;aACR,SAAS,CAAC,UAAC,GAAoB;YAC/B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACvB,CAAC,EAAE,UAAC,GAAS;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;YAChB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,EAAE;YACF,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAA;IACL,CAAC;IA/BF;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,OAAO,EAAG,CAAC,SAAS,EAAE,SAAS,CAAC;YAChC,QAAQ,EAAE,gBAAgB;YAC1B,WAAW,EAAE,2BAA2B;YACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;SACxC,CAAC;mBAMqC,aAAM,CAAC,yCAAkB,CAAC;;0BAN/D;IA2BF,yBAAC;AAAD,CAAC,AA1BD,IA0BC;AA1BY,0BAAkB,qBA0B9B,CAAA","sourcesContent":["import { Component, OnInit, ElementRef, EventEmitter, Inject } from '@angular/core';\nimport { YoutubeDataService } from '../shared/youtube-data.service';\nimport { SearchResult } from '../shared/';\nimport  {Observable} from 'rxjs/Rx';\n\n@Component({\n  moduleId: module.id,\n  outputs : ['loading', 'results'],\n  selector: 'app-search-box',\n  templateUrl: 'search-box.component.html',\n  styleUrls: ['search-box.component.css']\n})\nexport class SearchBoxComponent implements OnInit {\n\n\tloading: EventEmitter<boolean> = new EventEmitter<boolean>();\n\tresults: EventEmitter<SearchResult[]> = new EventEmitter<SearchResult[]>();\n\n\tconstructor(private el : ElementRef, @Inject(YoutubeDataService) public youtube : YoutubeDataService) {}\n\n\tngOnInit() {\n\t\tObservable.fromEvent(this.el.nativeElement, 'keyup')\n\t\t\t\t.map((e : any) => e.target.value)\n\t\t\t\t.filter((q : string) => q.length > 1)\n\t\t\t\t.debounceTime(250)\n\t\t\t\t.do(() => this.loading.next(true))\n\t\t\t\t.map((q : string) => this.youtube.search(q))\n\t\t\t\t.switch()\n\t\t\t\t.subscribe((res : SearchResult[]) => {\n\t\t\t\t\tthis.loading.next(false);\n\t\t\t\t\tthis.results.next(res)\n\t\t\t\t}, (err : any) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t\tthis.loading.next(false);\n\t\t\t\t}, () => {\n\t\t\t\t\tthis.loading.next(false);\n\t\t\t\t})\n\t}\n\n}\n"]}